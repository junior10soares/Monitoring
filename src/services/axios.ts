import axios, { InternalAxiosRequestConfig } from "axios";

export const axiosInstance = axios.create({
	baseURL: "http://localhost:8085/api",
	headers: {
		common: {
			Authorization:
				"Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICI5ZzNld1lTWExtSVFZemVrMGJpenl5OGhNVkUzb3NDYkNPY1BsVzZkeEJBIn0.eyJleHAiOjE3MDg4MDA0NjUsImlhdCI6MTcwODM2ODQ2NSwiYXV0aF90aW1lIjoxNzA4MzY4NDY0LCJqdGkiOiI1NTgwMmQxYi1lODEzLTQ2YzItODQ1Ni0yMDJlMjgxYTYxMTQiLCJpc3MiOiJodHRwczovL2Rldi5sb2dpbi5tdC5nb3YuYnIvYXV0aC9yZWFsbXMvbXQtcmVhbG0iLCJhdWQiOiJhY2NvdW50Iiwic3ViIjoiMjQyYWE5YjEtY2FhZC00MWIzLTllNTItYzU2ZTFjZjY3NjQ5IiwidHlwIjoiQmVhcmVyIiwiYXpwIjoicHJvamV0by10ZW1wbGF0ZS1pbnRlZ3JhY2FvIiwic2Vzc2lvbl9zdGF0ZSI6ImQ4Yjk5NWYwLTBhOTMtNGQ1NS05ZTE2LTgwNDgxMjFjMWY3NyIsImFjciI6IjEiLCJhbGxvd2VkLW9yaWdpbnMiOlsiKiJdLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsibXQtbG9naW4iLCJvZmZsaW5lX2FjY2VzcyIsInVtYV9hdXRob3JpemF0aW9uIiwiZGVmYXVsdC1yb2xlcy1tdC1yZWFsbSJdfSwicmVzb3VyY2VfYWNjZXNzIjp7ImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoicHJvZmlsZSBlbWFpbCIsInNpZCI6ImQ4Yjk5NWYwLTBhOTMtNGQ1NS05ZTE2LTgwNDgxMjFjMWY3NyIsImVtYWlsX3ZlcmlmaWVkIjpmYWxzZSwibmFtZSI6IlVTVUFSSU8gREUgVEVTVEUiLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiI0NTc3MTc1NzAzOSIsImdpdmVuX25hbWUiOiJVU1VBUklPIiwiZGF0YU5hc2NpbWVudG8iOiIxMi8xMi8xOTgwIiwiZmFtaWx5X25hbWUiOiJERSBURVNURSIsIm5vbWVNYWUiOiJNQUUgRE8gVVNVQVJJTyBERSBURVNURSIsImVtYWlsIjoid3N0LTA5QGhvdG1haWwuY29tIn0.Cnr_MFPmD6GiLMyryUkZwXHoBKQfDFHyYzd64mnG3tPZkrLVfMVgjviXqmx6iVkCNX395-mZaQOin970QcfpM6TFhDq5iuaXwq6IbpbSmt6Ug1APe0WLNJG3-3oQdHdgqBx6xHDUSmygbi6VCA9NwiZklDxGkkXc6vMaXP3tz-hHSgYnp0hDFeJFvwyqC3_rX_aPsECNbV8CUL3x7QlrPKlZgzEOUGYkHvvIFh1btYPzmUQ9Xiqrn70raXGyxxx9FviURL4RFBfXjMGj7JsjRR5iE_MThRWEJiuA_YzeATJyakDvfjPjw_tRDbJUQtCoXU0f3IBpuy7tOqDxlnUwxw",
		},
	},
});

// Interceptors
axiosInstance.interceptors.request.use(
	(config): InternalAxiosRequestConfig => {
		return config;
	},
	(error): any => {
		console.log(error);
		return Promise.reject(error);
	},
);

axiosInstance.interceptors.response.use(
	async (response): Promise<any> => {
		return response;
	},
	async (error): Promise<any> => {
		console.log(error);
		return Promise.reject(error);
	},
);
